#!/usr/bin/gwave -s
!#
; gwave script
(require-n-wavepanels 10)
(set! default-measure1-function 5)
(let ((df (if script-target-datafile
           script-target-datafile
           (find-or-load-wavefile "/home/facundo/tesis/fiocs/Design/I-DECODER-001/gEDA/i-decoder.bin"))))
 (wavepanel-add-var-setup df (nth-wavepanel 0) "q1" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 1) "q2" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 2) "q3" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 3) "q4" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 4) "q5" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 5) "q6" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 6) "q7" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 7) "q4" 0)
 (wavepanel-add-var-setup df (nth-wavepanel 8) "ssb" 3)
 (wavepanel-add-var-setup df (nth-wavepanel 9) "lsb" 2)
)
(x-zoom! 0.0 4.0e-4)
(wtable-set-xlogscale! #f)
(set! default-wavepanel-type 0)
(set-wtable-vcursor! 0 7.2258064516129e-5)
(gtk-tooltips-enable gwave-tooltips)
(let ((wp (nth-wavepanel 0)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 1)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 2)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 3)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 4)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 5)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 6)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 7)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 8)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
 (wavepanel-y-zoom! wp 6.80619955385997e-5 5.41666258999097)
)
(let ((wp (nth-wavepanel 9)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
