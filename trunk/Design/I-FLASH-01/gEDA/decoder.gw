#!/usr/bin/gwave -s
!#
; gwave script
(require-n-wavepanels 10)
(set! default-measure1-function 5)
(let ((df (if script-target-datafile
           script-target-datafile
           (find-or-load-wavefile "i-decoder-test.bin"))))
 (wavepanel-add-var-setup df (nth-wavepanel 0) "q1" 0)
 (wavepanel-add-var-setup df (nth-wavepanel 1) "q2" 2)
 (wavepanel-add-var-setup df (nth-wavepanel 2) "q3" 4)
 (wavepanel-add-var-setup df (nth-wavepanel 3) "q4" 5)
 (wavepanel-add-var-setup df (nth-wavepanel 4) "q5" 1)
 (wavepanel-add-var-setup df (nth-wavepanel 5) "q6" 0)
 (wavepanel-add-var-setup df (nth-wavepanel 6) "q7" 4)
 (wavepanel-add-var-setup df (nth-wavepanel 7) "msb" 0)
 (wavepanel-add-var-setup df (nth-wavepanel 8) "ssb" 0)
 (wavepanel-add-var-setup df (nth-wavepanel 9) "lsb" 0)
)
(x-zoom! 0.0 3.4e-4)
(wtable-set-xlogscale! #f)
(set! default-wavepanel-type 0)
(set-wtable-vcursor! 0 4.29739776951673e-5)
(gtk-tooltips-enable gwave-tooltips)
(let ((wp (nth-wavepanel 0)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 1)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 2)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 3)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 4)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 5)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 6)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 7)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
 (wavepanel-y-zoom! wp 0.0 5.2)
)
(let ((wp (nth-wavepanel 8)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
)
(let ((wp (nth-wavepanel 9)))
 (set-wavepanel-ylogscale! wp #f)
 (set-wavepanel-type! wp 1)
 (wavepanel-y-zoom! wp 0.0 5.5)
)
